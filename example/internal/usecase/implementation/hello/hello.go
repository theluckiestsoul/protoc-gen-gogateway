// Code generated by Go Gateway. DO NOT EDIT.

package hello

import (
	entity "github.com/theluckiestsoul/protoc-gen-gogateway/example/pkg/proto/entity"
)

import (
	"context"
	contract "github.com/theluckiestsoul/protoc-gen-gogateway/example/internal/usecase/contract/hello"
	repoContract "github.com/theluckiestsoul/protoc-gen-gogateway/example/internal/repository/contract/hello"
	repoImpl "github.com/theluckiestsoul/protoc-gen-gogateway/example/internal/repository/implementation/hello"
)

type helloserviceUnimplementedUseCase struct {
	repo repoContract.HelloServiceRepository
}

type helloserviceUseCase struct {
	*helloserviceUnimplementedUseCase
}

func (s *helloserviceUnimplementedUseCase) SayHello(ctx context.Context, req *entity.HelloRequest) (*entity.HelloResponse, error) {
	return s.repo.SayHello(ctx, req)
}
func (s *helloserviceUnimplementedUseCase) SayHelloAgain(ctx context.Context, req *entity.HelloRequest) (*entity.HelloResponse, error) {
	return s.repo.SayHelloAgain(ctx, req)
}
func NewHelloServiceUseCase() contract.HelloServiceUseCase {
	repo := repoImpl.NewHelloServiceRepository()
	return &helloserviceUnimplementedUseCase{repo}
}
