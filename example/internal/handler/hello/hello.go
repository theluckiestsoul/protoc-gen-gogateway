// Code generated by Go Gateway. DO NOT EDIT.

package hello

import (
	entity "github.com/theluckiestsoul/protoc-gen-gogateway/example/pkg/proto/entity"
)

import (
	echo "github.com/labstack/echo/v4"
	contract "github.com/theluckiestsoul/protoc-gen-gogateway/example/internal/usecase/contract/hello"
	"net/http"
)

type HelloServiceHandler struct {
	usecase contract.HelloServiceUseCase
}

func NewHelloServiceHandler(usecase contract.HelloServiceUseCase) *HelloServiceHandler {
	return &HelloServiceHandler{usecase}
}

func (s *HelloServiceHandler) SayHello(c echo.Context) error {
	req := &entity.HelloRequest{}
	if err := c.Bind(req); err != nil {
		return c.JSON(http.StatusBadRequest, err.Error())
	}
	res, err := s.usecase.SayHello(c.Request().Context(), req)
	if err != nil {
		return err
	}
	return c.JSON(http.StatusOK, res)
}
func (s *HelloServiceHandler) SayHelloAgain(c echo.Context) error {
	req := &entity.HelloRequest{}
	if err := c.Bind(req); err != nil {
		return c.JSON(http.StatusBadRequest, err.Error())
	}
	res, err := s.usecase.SayHelloAgain(c.Request().Context(), req)
	if err != nil {
		return err
	}
	return c.JSON(http.StatusOK, res)
}
